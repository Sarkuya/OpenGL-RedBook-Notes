<?xml version="1.0" encoding="UTF-8"?>

<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="Chapter_Drawing">

  <title>Drawing with OpenGL</title>
  <para>Drawing with OpenGL.</para>

  <section>
    <title>OpenGL Primitive Types</title>
    <table tabstyle="striped">
      <title>OpenGL Primitve Types</title>
      <tgroup cols="5">
        <colspec colname="c1" align="center" colwidth="1*" />
        <colspec colname="c2" colwidth="1.5*" />
        <colspec colname="c3" colwidth="2*" />
        <colspec colname="c4" colwidth="3*" />
        <colspec colname="c5" colwidth="4*" />
        <thead>
          <row>
            <entry>Index</entry>
            <entry>Name</entry>
            <entry>Mode</entry>
            <entry>Tokens</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1</entry>
            <entry>Points</entry>
            <entry>Points</entry>
            <entry>GL_POINTS</entry>
            <entry></entry>
          </row>
          <row>
            <entry morerows="2">2</entry>
            <entry morerows="2">Lines</entry>
            <entry>Independent Lines</entry>
            <entry>GL_LINES</entry>
            <entry></entry>
          </row>
          <row>
            <entry>Line Strips</entry>
            <entry>GL_LINE_STRIP</entry>
            <entry>connected lines, NOT closed</entry>
          </row>
          <row>
            <entry>Line Loops</entry>
            <entry>GL_LINE_LOOP</entry>
            <entry>connected lines, closed</entry>
          </row>
          <row>
            <entry morerows="2">3</entry>
            <entry morerows="2">Triangles</entry>
            <entry>Independent Triangles</entry>
            <entry>GL_TRIANGLES</entry>
            <entry></entry>
          </row>
          <row>
            <entry>Triangle Strips</entry>
            <entry>GL_TRIANGLE_STRIP</entry>
            <entry>last 2 vertices of privious triangle + 1 additional vertex</entry>
          </row>
          <row>
            <entry>Triangle Fans</entry>
            <entry>GL_TRIANGLE_FAN</entry>
            <entry>first vertex + next 2 vertices</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>An arbitrarily complex convex polygon can be rendered as a triangle fan.</para>
  </section>
  
  <section>
    <title>Polygon Front and Back Faces</title>
  
    <section>
      <title>Deciding Polygon Front and Back Faces</title>
      <para>A Polygon has two faces: front face and back face. By default, polygons with counterclockwise vertices are front faces; polygons with clockwise vertices are back faces. With front and back faces decided, we can control these two faces different while rendering (See next two sections).</para>
      <para>We can change the default front and back faces definition via <function>glFrontFace</function>.</para>
      <funcsynopsis>
        <funcprototype>
          <funcdef>void <function>glFrontFace</function></funcdef>
          <paramdef>GLenum <parameter>mode</parameter></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>Defines the front facing of polygons. Parameter <parameter>mode</parameter> is either <constant>GL_CCW</constant> or <constant>GL_CW</constant>.</para>
    </section>
  
    <section>
      <title>Deciding Polygon Front and Back Faces Mode</title>
      <para>By default, polygon front and back faces are drawn as filled. We can control their mode via <function>glPolygonMode</function>.</para>
      <funcsynopsis>
        <funcprototype>
          <funcdef>void <function>glPolygonMode</function></funcdef>
          <paramdef>GLenum <parameter>face</parameter></paramdef>
          <paramdef>GLenum <parameter>mode</parameter></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>The parameter <parameter>face</parameter> must be <constant>GL_FRONT_AND_BACK</constant>. Parameter <parameter>mode</parameter> can be <constant>GL_POINT</constant>, <constant>GL_LINE</constant>, or <constant>GL_FILL</constant>.</para>
    </section>
  
    <section>
      <title>Deciding Polygon Front and Back Faces Culling</title>
      <para>In a completely enclosed object, We can see only one face at a time, depending on we are outside of the object or inside the object. By default, OpenGL would draw both faces, which sometimes affect the application's performance. We can tell OpenGL which faces should be discarded (culled) via <function>glCullFace</function>.</para>
      <funcsynopsis>
        <funcprototype>
          <funcdef>void <function>glCullFace</function></funcdef>
          <paramdef>GLenum <parameter>mode</parameter></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>The <parameter>mode</parameter> should be either <constant>GL_FRONT</constant>, <constant>GL_BACK</constant>, or <constant>GL_FRONT_AND_BACK</constant>.</para>
      <para>To take effect, culling must be enabled by using <function>glEnable</function> with parameter <constant>GL_CULL_FACE</constant>.</para>
    </section>
  </section>
  
  <section>
    <title>References</title>
    <orderedlist>
      <listitem><para>abc, abc.org: <link xlink:href="https://www.opengl.org/sdk/docs/man/" /></para></listitem>
    </orderedlist>
  </section>

</chapter>